version: '3.9'

volumes:
  pgdata:
    driver: local

services:

  #### PREFECT SERVICES

  agent:
    build:
      context: ./docker/prefect-agent
      dockerfile: ./Dockerfile
    container_name: agent
    entrypoint: "./init.sh"
    volumes:
      - ./.data/prefect/:/home/prefect/.prefect/
      - ./docker/prefect-agent/src:/home/prefect/src
    depends_on:
      - postgres
      - redis

  ui:
    build:
      context: ./docker/prefect-ui
      dockerfile: ./Dockerfile
    container_name: ui
    entrypoint: "./init.sh"
    ports:
      - 4200:4200
    depends_on:
      - agent

  #### SUPPORT SERVICES

  postgres:
    build:
      context: './docker/postgres'
      dockerfile: ./Dockerfile
    container_name: postgres
    logging:
      driver: "json-file"
      options:
          max-file: "5"
          max-size: "10m"
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_USER=prefect
      - POSTGRES_PASSWORD=prefect
      - POSTGRES_DB=prefect_db
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "prefect_db", "-U", "prefect" ]
      timeout: 45s
      interval: 10s
      retries: 10

  adminer:
    build:
      context: './docker/adminer'
      dockerfile: ./Dockerfile
    container_name: adminer
    logging:
      driver: "json-file"
      options:
          max-file: "5"
          max-size: "10m"
    ports:
      - 9000:9000
    environment:
      - ADMINER_DEFAULT_DB_DRIVER=psql
      - ADMINER_DEFAULT_DB_HOST=postgres
      - ADMINER_DEFAULT_DB_NAME=prefect_db
    healthcheck:
      test: [ "CMD", "nc", "-z", "adminer", "9000" ]
      timeout: 45s
      interval: 10s
      retries: 10
    depends_on:
      - postgres

  redis:
    build:
      context: ./docker/redis
      dockerfile: ./Dockerfile
    container_name: redis
    command: --requirepass secret_redis
    volumes:
        - ./.data/redis:/data
    ports:
      - 6379:6379
    
  phpredisadmin:
    build:
      context: ./docker/phpredisadmin
      dockerfile: ./Dockerfile
    container_name: phpredisadmin
    environment:
      - ADMIN_USER=prefect
      - ADMIN_PASS=prefect
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
      - REDIS_1_AUTH=secret_redis
    ports:
      - 9987:80
    depends_on:
      - redis

  minimal-notebook:
    build:
      context: ./docker/minimal-notebook
      dockerfile: ./Dockerfile
    container_name: notebook
    environment:
      - JUPYTER_TOKEN=secret_token
    volumes:
      - ./docker/minimal-notebook/notebooks:/home/jovyan/work
      - ./.data/prefect/raw/:/home/jovyan/data/raw
      - ./.data/prefect/curated/:/home/jovyan/data/curated
    ports:
      - 8888:8888
    depends_on:
      - agent
